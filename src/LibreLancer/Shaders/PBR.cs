//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibreLancer.Shaders
{
    using System;
    
    public class PBR
    {
        static ShaderVariables[] variants;
        private static bool iscompiled = false;
        private static int GetIndex(ShaderFeatures features)
        {
            ShaderFeatures masked = (features & ((ShaderFeatures)(30)));
            if ((masked == ((ShaderFeatures)(2))))
            {
                return 1;
            }
            if ((masked == ((ShaderFeatures)(16))))
            {
                return 2;
            }
            if ((masked == ((ShaderFeatures)(18))))
            {
                return 3;
            }
            if ((masked == ((ShaderFeatures)(4))))
            {
                return 4;
            }
            if ((masked == ((ShaderFeatures)(6))))
            {
                return 5;
            }
            if ((masked == ((ShaderFeatures)(20))))
            {
                return 6;
            }
            if ((masked == ((ShaderFeatures)(22))))
            {
                return 7;
            }
            if ((masked == ((ShaderFeatures)(8))))
            {
                return 8;
            }
            if ((masked == ((ShaderFeatures)(10))))
            {
                return 9;
            }
            if ((masked == ((ShaderFeatures)(24))))
            {
                return 10;
            }
            if ((masked == ((ShaderFeatures)(26))))
            {
                return 11;
            }
            if ((masked == ((ShaderFeatures)(12))))
            {
                return 12;
            }
            if ((masked == ((ShaderFeatures)(14))))
            {
                return 13;
            }
            if ((masked == ((ShaderFeatures)(28))))
            {
                return 14;
            }
            if ((masked == ((ShaderFeatures)(30))))
            {
                return 15;
            }
            return 0;
        }
        public static ShaderVariables Get(LibreLancer.Graphics.RenderContext device, ShaderFeatures features)
        {
            AllShaders.Compile(device);
            return variants[GetIndex(features)];
        }
        public static ShaderVariables Get(LibreLancer.Graphics.RenderContext device)
        {
            AllShaders.Compile(device);
            return variants[0];
        }
        internal static void Compile(LibreLancer.Graphics.RenderContext device, string sourceBundle)
        {
            if (iscompiled)
            {
                return;
            }
            iscompiled = true;
            ShaderVariables.Log("Compiling PBR");
            variants = new ShaderVariables[16];
            if (device.HasFeature(LibreLancer.Graphics.GraphicsFeature.Features430))
            {
                variants[0] = ShaderVariables.Compile(device, sourceBundle.Substring(503119, 957), sourceBundle.Substring(510350, 6615));
                variants[1] = ShaderVariables.Compile(device, sourceBundle.Substring(503119, 957), sourceBundle.Substring(523332, 6708));
                variants[2] = ShaderVariables.Compile(device, sourceBundle.Substring(530040, 1377), sourceBundle.Substring(537888, 6812));
                variants[3] = ShaderVariables.Compile(device, sourceBundle.Substring(530040, 1377), sourceBundle.Substring(551264, 6905));
                variants[4] = ShaderVariables.Compile(device, sourceBundle.Substring(503119, 957), sourceBundle.Substring(510350, 6615));
                variants[5] = ShaderVariables.Compile(device, sourceBundle.Substring(503119, 957), sourceBundle.Substring(523332, 6708));
                variants[6] = ShaderVariables.Compile(device, sourceBundle.Substring(530040, 1377), sourceBundle.Substring(537888, 6812));
                variants[7] = ShaderVariables.Compile(device, sourceBundle.Substring(530040, 1377), sourceBundle.Substring(551264, 6905));
                variants[8] = ShaderVariables.Compile(device, sourceBundle.Substring(503119, 957), sourceBundle.Substring(564575, 6747));
                variants[9] = ShaderVariables.Compile(device, sourceBundle.Substring(503119, 957), sourceBundle.Substring(577821, 6840));
                variants[10] = ShaderVariables.Compile(device, sourceBundle.Substring(530040, 1377), sourceBundle.Substring(591264, 6944));
                variants[11] = ShaderVariables.Compile(device, sourceBundle.Substring(530040, 1377), sourceBundle.Substring(604904, 7037));
                variants[12] = ShaderVariables.Compile(device, sourceBundle.Substring(503119, 957), sourceBundle.Substring(564575, 6747));
                variants[13] = ShaderVariables.Compile(device, sourceBundle.Substring(503119, 957), sourceBundle.Substring(577821, 6840));
                variants[14] = ShaderVariables.Compile(device, sourceBundle.Substring(530040, 1377), sourceBundle.Substring(591264, 6944));
                variants[15] = ShaderVariables.Compile(device, sourceBundle.Substring(530040, 1377), sourceBundle.Substring(604904, 7037));
            }
            else
            {
                variants[0] = ShaderVariables.Compile(device, sourceBundle.Substring(503119, 957), sourceBundle.Substring(504076, 6274));
                variants[1] = ShaderVariables.Compile(device, sourceBundle.Substring(503119, 957), sourceBundle.Substring(516965, 6367));
                variants[2] = ShaderVariables.Compile(device, sourceBundle.Substring(530040, 1377), sourceBundle.Substring(531417, 6471));
                variants[3] = ShaderVariables.Compile(device, sourceBundle.Substring(530040, 1377), sourceBundle.Substring(544700, 6564));
                variants[4] = ShaderVariables.Compile(device, sourceBundle.Substring(503119, 957), sourceBundle.Substring(504076, 6274));
                variants[5] = ShaderVariables.Compile(device, sourceBundle.Substring(503119, 957), sourceBundle.Substring(516965, 6367));
                variants[6] = ShaderVariables.Compile(device, sourceBundle.Substring(530040, 1377), sourceBundle.Substring(531417, 6471));
                variants[7] = ShaderVariables.Compile(device, sourceBundle.Substring(530040, 1377), sourceBundle.Substring(544700, 6564));
                variants[8] = ShaderVariables.Compile(device, sourceBundle.Substring(503119, 957), sourceBundle.Substring(558169, 6406));
                variants[9] = ShaderVariables.Compile(device, sourceBundle.Substring(503119, 957), sourceBundle.Substring(571322, 6499));
                variants[10] = ShaderVariables.Compile(device, sourceBundle.Substring(530040, 1377), sourceBundle.Substring(584661, 6603));
                variants[11] = ShaderVariables.Compile(device, sourceBundle.Substring(530040, 1377), sourceBundle.Substring(598208, 6696));
                variants[12] = ShaderVariables.Compile(device, sourceBundle.Substring(503119, 957), sourceBundle.Substring(558169, 6406));
                variants[13] = ShaderVariables.Compile(device, sourceBundle.Substring(503119, 957), sourceBundle.Substring(571322, 6499));
                variants[14] = ShaderVariables.Compile(device, sourceBundle.Substring(530040, 1377), sourceBundle.Substring(584661, 6603));
                variants[15] = ShaderVariables.Compile(device, sourceBundle.Substring(530040, 1377), sourceBundle.Substring(598208, 6696));
            }
        }
    }
}
