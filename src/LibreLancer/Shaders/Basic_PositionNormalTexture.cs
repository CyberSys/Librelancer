//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibreLancer.Shaders
{
    using System;
    
    public class Basic_PositionNormalTexture
    {
        static ShaderVariables[] variants;
        private static bool iscompiled = false;
        private static int GetIndex(ShaderFeatures features)
        {
            ShaderFeatures masked = (features & ((ShaderFeatures)(23)));
            if ((masked == ((ShaderFeatures)(1))))
            {
                return 1;
            }
            if ((masked == ((ShaderFeatures)(16))))
            {
                return 2;
            }
            if ((masked == ((ShaderFeatures)(17))))
            {
                return 3;
            }
            if ((masked == ((ShaderFeatures)(2))))
            {
                return 4;
            }
            if ((masked == ((ShaderFeatures)(3))))
            {
                return 5;
            }
            if ((masked == ((ShaderFeatures)(18))))
            {
                return 6;
            }
            if ((masked == ((ShaderFeatures)(19))))
            {
                return 7;
            }
            if ((masked == ((ShaderFeatures)(4))))
            {
                return 8;
            }
            if ((masked == ((ShaderFeatures)(5))))
            {
                return 9;
            }
            if ((masked == ((ShaderFeatures)(20))))
            {
                return 10;
            }
            if ((masked == ((ShaderFeatures)(21))))
            {
                return 11;
            }
            if ((masked == ((ShaderFeatures)(6))))
            {
                return 12;
            }
            if ((masked == ((ShaderFeatures)(7))))
            {
                return 13;
            }
            if ((masked == ((ShaderFeatures)(22))))
            {
                return 14;
            }
            if ((masked == ((ShaderFeatures)(23))))
            {
                return 15;
            }
            return 0;
        }
        public static ShaderVariables Get(LibreLancer.Graphics.RenderContext device, ShaderFeatures features)
        {
            AllShaders.Compile(device);
            return variants[GetIndex(features)];
        }
        public static ShaderVariables Get(LibreLancer.Graphics.RenderContext device)
        {
            AllShaders.Compile(device);
            return variants[0];
        }
        internal static void Compile(LibreLancer.Graphics.RenderContext device, string sourceBundle)
        {
            if (iscompiled)
            {
                return;
            }
            iscompiled = true;
            ShaderVariables.Log("Compiling Basic_PositionNormalTexture");
            variants = new ShaderVariables[16];
            if (device.HasFeature(LibreLancer.Graphics.GraphicsFeature.Features430))
            {
                variants[0] = ShaderVariables.Compile(device, sourceBundle.Substring(193675, 1690), sourceBundle.Substring(45618, 6700));
                variants[1] = ShaderVariables.Compile(device, sourceBundle.Substring(193675, 1690), sourceBundle.Substring(56467, 6754));
                variants[2] = ShaderVariables.Compile(device, sourceBundle.Substring(199641, 4617), sourceBundle.Substring(73919, 2644));
                variants[3] = ShaderVariables.Compile(device, sourceBundle.Substring(199641, 4617), sourceBundle.Substring(78920, 2698));
                variants[4] = ShaderVariables.Compile(device, sourceBundle.Substring(193675, 1690), sourceBundle.Substring(85757, 6744));
                variants[5] = ShaderVariables.Compile(device, sourceBundle.Substring(193675, 1690), sourceBundle.Substring(96694, 6798));
                variants[6] = ShaderVariables.Compile(device, sourceBundle.Substring(199641, 4617), sourceBundle.Substring(105839, 2688));
                variants[7] = ShaderVariables.Compile(device, sourceBundle.Substring(199641, 4617), sourceBundle.Substring(110928, 2742));
                variants[8] = ShaderVariables.Compile(device, sourceBundle.Substring(193675, 1690), sourceBundle.Substring(117959, 6894));
                variants[9] = ShaderVariables.Compile(device, sourceBundle.Substring(193675, 1690), sourceBundle.Substring(129196, 6948));
                variants[10] = ShaderVariables.Compile(device, sourceBundle.Substring(199641, 4617), sourceBundle.Substring(138641, 2838));
                variants[11] = ShaderVariables.Compile(device, sourceBundle.Substring(199641, 4617), sourceBundle.Substring(144030, 2892));
                variants[12] = ShaderVariables.Compile(device, sourceBundle.Substring(193675, 1690), sourceBundle.Substring(151255, 6938));
                variants[13] = ShaderVariables.Compile(device, sourceBundle.Substring(193675, 1690), sourceBundle.Substring(162580, 6992));
                variants[14] = ShaderVariables.Compile(device, sourceBundle.Substring(199641, 4617), sourceBundle.Substring(172113, 2882));
                variants[15] = ShaderVariables.Compile(device, sourceBundle.Substring(199641, 4617), sourceBundle.Substring(177590, 2936));
            }
            else
            {
                variants[0] = ShaderVariables.Compile(device, sourceBundle.Substring(192326, 1349), sourceBundle.Substring(40082, 4095));
                variants[1] = ShaderVariables.Compile(device, sourceBundle.Substring(192326, 1349), sourceBundle.Substring(52318, 4149));
                variants[2] = ShaderVariables.Compile(device, sourceBundle.Substring(195365, 4276), sourceBundle.Substring(67248, 2303));
                variants[3] = ShaderVariables.Compile(device, sourceBundle.Substring(195365, 4276), sourceBundle.Substring(76563, 2357));
                variants[4] = ShaderVariables.Compile(device, sourceBundle.Substring(192326, 1349), sourceBundle.Substring(81618, 4139));
                variants[5] = ShaderVariables.Compile(device, sourceBundle.Substring(192326, 1349), sourceBundle.Substring(92501, 4193));
                variants[6] = ShaderVariables.Compile(device, sourceBundle.Substring(195365, 4276), sourceBundle.Substring(103492, 2347));
                variants[7] = ShaderVariables.Compile(device, sourceBundle.Substring(195365, 4276), sourceBundle.Substring(108527, 2401));
                variants[8] = ShaderVariables.Compile(device, sourceBundle.Substring(192326, 1349), sourceBundle.Substring(113670, 4289));
                variants[9] = ShaderVariables.Compile(device, sourceBundle.Substring(192326, 1349), sourceBundle.Substring(124853, 4343));
                variants[10] = ShaderVariables.Compile(device, sourceBundle.Substring(195365, 4276), sourceBundle.Substring(136144, 2497));
                variants[11] = ShaderVariables.Compile(device, sourceBundle.Substring(195365, 4276), sourceBundle.Substring(141479, 2551));
                variants[12] = ShaderVariables.Compile(device, sourceBundle.Substring(192326, 1349), sourceBundle.Substring(146922, 4333));
                variants[13] = ShaderVariables.Compile(device, sourceBundle.Substring(192326, 1349), sourceBundle.Substring(158193, 4387));
                variants[14] = ShaderVariables.Compile(device, sourceBundle.Substring(195365, 4276), sourceBundle.Substring(169572, 2541));
                variants[15] = ShaderVariables.Compile(device, sourceBundle.Substring(195365, 4276), sourceBundle.Substring(174995, 2595));
            }
        }
    }
}
