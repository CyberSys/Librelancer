//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibreLancer.Shaders
{
    using System;
    
    public class DetailMap2Dm1Msk2PassMaterial
    {
        static ShaderVariables[] variants;
        private static bool iscompiled = false;
        private static int GetIndex(ShaderFeatures features)
        {
            ShaderFeatures masked = (features & ((ShaderFeatures)(16)));
            if ((masked == ((ShaderFeatures)(16))))
            {
                return 1;
            }
            return 0;
        }
        public static ShaderVariables Get(LibreLancer.Graphics.RenderContext device, ShaderFeatures features)
        {
            AllShaders.Compile(device);
            return variants[GetIndex(features)];
        }
        public static ShaderVariables Get(LibreLancer.Graphics.RenderContext device)
        {
            AllShaders.Compile(device);
            return variants[0];
        }
        internal static void Compile(LibreLancer.Graphics.RenderContext device, string sourceBundle)
        {
            if (iscompiled)
            {
                return;
            }
            iscompiled = true;
            ShaderVariables.Log("Compiling DetailMap2Dm1Msk2PassMaterial");
            variants = new ShaderVariables[2];
            if (device.HasFeature(LibreLancer.Graphics.GraphicsFeature.Features430))
            {
                variants[0] = ShaderVariables.Compile(device, sourceBundle.Substring(251766, 1545), sourceBundle.Substring(253311, 6936));
                variants[1] = ShaderVariables.Compile(device, sourceBundle.Substring(266917, 4472), sourceBundle.Substring(271389, 2880));
            }
            else
            {
                variants[0] = ShaderVariables.Compile(device, sourceBundle.Substring(246231, 1204), sourceBundle.Substring(247435, 4331));
                variants[1] = ShaderVariables.Compile(device, sourceBundle.Substring(260247, 4131), sourceBundle.Substring(264378, 2539));
            }
        }
    }
}
